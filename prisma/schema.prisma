generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cart_items {
  id         Int       @id @default(autoincrement())
  user_id    Int?
  product_id Int?
  quantity   Int?      @default(1)
  added_at   DateTime? @default(now()) @db.Timestamp(6)
  products   products? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model categories {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(100)
  description String?
  products    products[]
}

model order_items {
  id         Int       @id @default(autoincrement())
  order_id   Int?
  product_id Int?
  quantity   Int
  price      Decimal   @db.Decimal(10, 2)
  orders     orders?   @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  products   products? @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model orders {
  id          Int           @id @default(autoincrement())
  user_id     Int?
  total_price Decimal       @db.Decimal(10, 2)
  status      String?       @default("pending") @db.VarChar(50)
  created_at  DateTime?     @default(now()) @db.Timestamp(6)
  order_items order_items[]
  users       users?        @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model products {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  description String?
  price       Decimal       @db.Decimal(10, 2)
  stock       Int?          @default(0)
  category_id Int?
  created_at  DateTime?     @default(now()) @db.Timestamp(6)
  updated_at  DateTime?     @default(now()) @db.Timestamp(6)
  cart_items  cart_items[]
  order_items order_items[]
  categories  categories?   @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model users {
  id         Int          @id @default(autoincrement())
  name       String       @db.VarChar(100)
  email      String       @unique @db.VarChar(100)
  password   String       @db.VarChar(255)
  role       String?      @default("customer") @db.VarChar(50)
  created_at DateTime?    @default(now()) @db.Timestamp(6)
  cart_items cart_items[]
  orders     orders[]
}
